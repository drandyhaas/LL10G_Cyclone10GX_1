/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 2023  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the Intel FPGA Software License Subscription Agreements 
on the Quartus Prime software download page.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 0 0 472 464)
	(text "address_decoder_channel_xcvr_rcfg" (rect 113 0 265 12)(font "Arial" (font_size 11)))
	(text "inst" (rect 8 448 20 460)(font "Arial" ))
	(port
		(pt 0 72)
		(input)
		(text "clk" (rect 0 0 10 12)(font "Arial" (font_size 8)))
		(text "clk" (rect 4 65 22 76)(font "Arial" (font_size 8)))
	)
	(port
		(pt 0 120)
		(input)
		(text "reset" (rect 0 0 20 12)(font "Arial" (font_size 8)))
		(text "reset" (rect 4 115 34 126)(font "Arial" (font_size 8)))
	)
	(port
		(pt 0 176)
		(input)
		(text "uav_address[11..0]" (rect 0 0 75 12)(font "Arial" (font_size 8)))
		(text "uav_address[11..0]" (rect 4 165 112 176)(font "Arial" (font_size 8)))
		(line (pt 0 176)(pt 170 176)(line_width 3))
	)
	(port
		(pt 0 200)
		(input)
		(text "uav_burstcount[2..0]" (rect 0 0 82 12)(font "Arial" (font_size 8)))
		(text "uav_burstcount[2..0]" (rect 4 190 124 201)(font "Arial" (font_size 8)))
	)
	(port
		(pt 0 224)
		(input)
		(text "uav_read" (rect 0 0 38 12)(font "Arial" (font_size 8)))
		(text "uav_read" (rect 4 215 52 226)(font "Arial" (font_size 8)))
	)
	(port
		(pt 0 248)
		(input)
		(text "uav_write" (rect 0 0 38 12)(font "Arial" (font_size 8)))
		(text "uav_write" (rect 4 240 58 251)(font "Arial" (font_size 8)))
	)
	(port
		(pt 0 320)
		(input)
		(text "uav_byteenable[3..0]" (rect 0 0 83 12)(font "Arial" (font_size 8)))
		(text "uav_byteenable[3..0]" (rect 4 315 124 326)(font "Arial" (font_size 8)))
	)
	(port
		(pt 0 376)
		(input)
		(text "uav_writedata[31..0]" (rect 0 0 79 12)(font "Arial" (font_size 8)))
		(text "uav_writedata[31..0]" (rect 4 365 124 376)(font "Arial" (font_size 8)))
		(line (pt 0 376)(pt 170 376)(line_width 3))
	)
	(port
		(pt 0 400)
		(input)
		(text "uav_lock" (rect 0 0 36 12)(font "Arial" (font_size 8)))
		(text "uav_lock" (rect 4 390 52 401)(font "Arial" (font_size 8)))
	)
	(port
		(pt 0 424)
		(input)
		(text "uav_debugaccess" (rect 0 0 73 12)(font "Arial" (font_size 8)))
		(text "uav_debugaccess" (rect 4 415 94 426)(font "Arial" (font_size 8)))
	)
	(port
		(pt 472 144)
		(input)
		(text "av_readdata[31..0]" (rect 0 0 74 12)(font "Arial" (font_size 8)))
		(text "av_readdata[31..0]" (rect 384 140 492 151)(font "Arial" (font_size 8)))
	)
	(port
		(pt 472 200)
		(input)
		(text "av_waitrequest" (rect 0 0 60 12)(font "Arial" (font_size 8)))
		(text "av_waitrequest" (rect 397 190 481 201)(font "Arial" (font_size 8)))
	)
	(port
		(pt 0 272)
		(output)
		(text "uav_waitrequest" (rect 0 0 64 12)(font "Arial" (font_size 8)))
		(text "uav_waitrequest" (rect 4 265 94 276)(font "Arial" (font_size 8)))
	)
	(port
		(pt 0 296)
		(output)
		(text "uav_readdatavalid" (rect 0 0 73 12)(font "Arial" (font_size 8)))
		(text "uav_readdatavalid" (rect 4 290 106 301)(font "Arial" (font_size 8)))
	)
	(port
		(pt 0 344)
		(output)
		(text "uav_readdata[31..0]" (rect 0 0 79 12)(font "Arial" (font_size 8)))
		(text "uav_readdata[31..0]" (rect 4 340 118 351)(font "Arial" (font_size 8)))
	)
	(port
		(pt 472 72)
		(output)
		(text "av_address[9..0]" (rect 0 0 68 12)(font "Arial" (font_size 8)))
		(text "av_address[9..0]" (rect 391 65 487 76)(font "Arial" (font_size 8)))
	)
	(port
		(pt 472 96)
		(output)
		(text "av_write" (rect 0 0 34 12)(font "Arial" (font_size 8)))
		(text "av_write" (rect 430 90 478 101)(font "Arial" (font_size 8)))
	)
	(port
		(pt 472 120)
		(output)
		(text "av_read" (rect 0 0 34 12)(font "Arial" (font_size 8)))
		(text "av_read" (rect 433 115 475 126)(font "Arial" (font_size 8)))
	)
	(port
		(pt 472 176)
		(output)
		(text "av_writedata[31..0]" (rect 0 0 74 12)(font "Arial" (font_size 8)))
		(text "av_writedata[31..0]" (rect 381 165 495 176)(font "Arial" (font_size 8)))
	)
	(drawing
		(text "clk" (rect 155 46 328 105)(font "Arial" (color 128 0 0)(font_size 9)))
		(text "clk" (rect 175 71 368 152)(font "Arial" (color 0 0 0)))
		(text "reset" (rect 141 96 312 205)(font "Arial" (color 128 0 0)(font_size 9)))
		(text "reset" (rect 175 121 380 252)(font "Arial" (color 0 0 0)))
		(text "avalon_universal_slave_0" (rect 21 146 186 305)(font "Arial" (color 128 0 0)(font_size 9)))
		(text "address" (rect 175 171 392 352)(font "Arial" (color 0 0 0)))
		(text "burstcount" (rect 175 196 410 402)(font "Arial" (color 0 0 0)))
		(text "read" (rect 175 221 374 452)(font "Arial" (color 0 0 0)))
		(text "write" (rect 175 246 380 502)(font "Arial" (color 0 0 0)))
		(text "waitrequest" (rect 175 271 416 552)(font "Arial" (color 0 0 0)))
		(text "readdatavalid" (rect 175 296 428 602)(font "Arial" (color 0 0 0)))
		(text "byteenable" (rect 175 321 410 652)(font "Arial" (color 0 0 0)))
		(text "readdata" (rect 175 346 398 702)(font "Arial" (color 0 0 0)))
		(text "writedata" (rect 175 371 404 752)(font "Arial" (color 0 0 0)))
		(text "lock" (rect 175 396 374 802)(font "Arial" (color 0 0 0)))
		(text "debugaccess" (rect 175 421 416 852)(font "Arial" (color 0 0 0)))
		(text "avalon_anti_slave_0" (rect 307 46 728 105)(font "Arial" (color 128 0 0)(font_size 9)))
		(text "address" (rect 269 71 580 152)(font "Arial" (color 0 0 0)))
		(text "write" (rect 283 96 596 202)(font "Arial" (color 0 0 0)))
		(text "read" (rect 284 121 592 252)(font "Arial" (color 0 0 0)))
		(text "readdata" (rect 266 146 580 302)(font "Arial" (color 0 0 0)))
		(text "writedata" (rect 265 171 584 352)(font "Arial" (color 0 0 0)))
		(text "waitrequest" (rect 255 196 576 402)(font "Arial" (color 0 0 0)))
		(text " address_decoder_channel_xcvr_rcfg " (rect 311 451 832 912)(font "Arial" ))
		(line (pt 170 34)(pt 306 34)(line_width 1))
		(line (pt 306 34)(pt 306 451)(line_width 1))
		(line (pt 170 451)(pt 306 451)(line_width 1))
		(line (pt 170 34)(pt 170 451)(line_width 1))
		(line (pt 0 76)(pt 170 76)(line_width 1))
		(line (pt 171 55)(pt 171 80)(line_width 1))
		(line (pt 172 55)(pt 172 80)(line_width 1))
		(line (pt 0 126)(pt 170 126)(line_width 1))
		(line (pt 171 105)(pt 171 130)(line_width 1))
		(line (pt 172 105)(pt 172 130)(line_width 1))
		(line (pt 0 201)(pt 170 201)(line_width 3))
		(line (pt 0 226)(pt 170 226)(line_width 1))
		(line (pt 0 251)(pt 170 251)(line_width 1))
		(line (pt 0 276)(pt 170 276)(line_width 1))
		(line (pt 0 301)(pt 170 301)(line_width 1))
		(line (pt 0 326)(pt 170 326)(line_width 3))
		(line (pt 0 351)(pt 170 351)(line_width 3))
		(line (pt 0 401)(pt 170 401)(line_width 1))
		(line (pt 0 426)(pt 170 426)(line_width 1))
		(line (pt 171 155)(pt 171 430)(line_width 1))
		(line (pt 172 155)(pt 172 430)(line_width 1))
		(line (pt 476 76)(pt 306 76)(line_width 3))
		(line (pt 476 101)(pt 306 101)(line_width 1))
		(line (pt 476 126)(pt 306 126)(line_width 1))
		(line (pt 476 151)(pt 306 151)(line_width 3))
		(line (pt 476 176)(pt 306 176)(line_width 3))
		(line (pt 476 201)(pt 306 201)(line_width 1))
		(line (pt 305 55)(pt 305 205)(line_width 1))
		(line (pt 304 55)(pt 304 205)(line_width 1))
		(line (pt 0 0)(pt 476 0)(line_width 1))
		(line (pt 476 0)(pt 476 468)(line_width 1))
		(line (pt 0 468)(pt 476 468)(line_width 1))
		(line (pt 0 0)(pt 0 468)(line_width 1))
	)
)
